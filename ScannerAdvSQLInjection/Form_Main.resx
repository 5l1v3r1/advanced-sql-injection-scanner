<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSearchVuln.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAALDAAA
        CwwBP0AiyAAABJJJREFUSEuFVWlIpWUUfq/bNXcdxTWX676luMtIiYoy6iguDG41TeVSMeEKkguI4BKD
        SC4jBC71R0T/GI5KYOZSg4KiY+GEojY1f0RatEWyns55uVeud+61Dw7f973vOc9z3rO9Quh5zMzMhIWF
        hbC3t5e7AQEBIjs7W2RkZAgPDw99JiLiFR+5nhYpxLt3xN1HD8WEuVJY6FXWJfDz8xNZWVkiPT1duLu7
        X7GxsrJKjom7WZf+miql5W1Rt/mZeP+TFvHx6qfiewc7EWCQwMjIiE9hSk9YRETE64WFhR/m5uY2+/r6
        lpNRPImJubl54L17bz374dmP+OlJ8a/zg6bPH9QYrU50iY1Xo8Q7pGOql4AWLSgUJfX19Uvr6+vnJycn
        OD4+xuHhIdbW1tDc3Pw3he9xUlLSWl5eHro/6gbwFF8tzv1saX3jlkIhrAwB83pQSUnJ57u7u2QEnJ6e
        4uDgAFtbW1hdXcXCwgIWFxdB5HB2dgadFGSDgsIy3P+gGtbW1neuAw9va2v79uLiAmdnZ9jb28Pm5iZW
        VlYwPz+PqakpjI2NYXBwED09PXBxcZHgavmX3pMkdoYI7Gtra9fOz89xdHSEjY0NLC8vY25uDpOTkxJ4
        YGAA3d3daG1tRWNjI/z9/bUJ/iTg2wa9j4uL693f38fOzg6WlpYwOzsrgUdHR9Hf34+uri60tLSAnEBl
        ZSVKS0tBedAm4G8+wUv6SMJ7e3uPt7e3MTMzg4mJCYyMjOgFpvwgPz8fsbGxUCgUugQXBH7rBQJKVtP4
        +Dimp6cxPDyMvr4+dHZ2crWgpqYG5eXlYOCcnBykpaUhPj4eNjY2EpxJdIhGdAmUPj4+00NDQ2Dp6OhA
        U1OTBK6oqLgETk1NlcBhYWFwcHC4Aq5D8pQIrLVJVNSNGw0NDWhvb0d1dbX0uLi4WHqckpICyg9CQ0Ph
        5eUF0tULziTqkj0j8BBtAv55Qt2KqqoqlJWVgTr2EjgkJASenp4yoSYmJnrBGVipVEpy+uY83NQmCKKf
        LY4ndS+ioqIQGRkJGnBwc3OTsaZxcZlMTTg0b95jYCcnJ6lP/38RVrQ2wQ36+VKrYaSnxsbGV5KnC8z7
        NKtkPhiYe4KFCJ4T1gsjt1+bQPtbG5jXNeGwtbWFq6srqEAQFBQkyzYwMJD350nPRLeSsmmBj3ZtAmmM
        86yRM4gTzoCcO64uLgZeJ4z7+hqNL4YvDBFwyCwtLeHo6CjzRPeDLNeYmBjQRAXdFfIE5P13hPGyPgJe
        Syb5jUk0YdGNs0qlAlcVF0JiYqL0mruaLiJ24B+yfdMQuGb9Pfr4g0m47Lg0eWJ6e3vLOHN1JSQkIDk5
        GZmZmSgqKgI3oLqrH5Cd2XUEStrkDqwjOeGwMHhwcPAVjzkcBQUFslfCw8NBeeEp2kPC1agwRGBEGw5q
        JTt6c9JnKUS/cNy5J6Kjo2UyOe6cAyrR30nnMcldEkcSttN/yatZ+f60USvylce1XEjSy2SUl6/p/Q0J
        F8NDkjdIVCSsy3YMzo7+78NKTGas1uSaZu/c1MIn1VzmHBLWMxia/wDeS1SOWTKSMwAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>